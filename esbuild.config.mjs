import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import path from "path";
import fs from "fs";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');
const outDir = 'dist';

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ['main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins],
	format: 'cjs',
	target: 'es2018',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: path.join(outDir, 'main.js'),
	jsx: 'automatic',
	jsxImportSource: 'react',
});

async function copyAssets() {
	fs.mkdirSync(outDir, { recursive: true });
	for (const file of ['manifest.json', 'styles.css']) {
		if (fs.existsSync(file)) {
			fs.copyFileSync(file, path.join(outDir, file));
		}
	}
}

if (prod) {
	await context.rebuild();
	await copyAssets();
	process.exit(0);
} else {
	await copyAssets();
	await context.watch();
}